A brief introduction to the technologies:

React:

React is a JavaScript library developed by Facebook used to create and handle flexible components for user-interface.

Git:

Git is an amazing revision control system for any type of document-based projects.

GitHub:

GitHub is a web-based version of git with a lot cool features like bug tracking, documentation, team management, etc.

GitHub Pages:

GitHub Pages is a platform to create beautiful static websites for the repositories, using the code present in the respected repository. We can also manually create GitHub Pages for any repository by going through the documentation here. But for this post, I am going to use ‘gh-pages’ package which will automatically achieve this goal for me.

Node.js and npm:

Node.js is a server runtime environment for running Javascript on the server and npm is a package manager used to download and install different packages for JavaScript projects.

Environment:

Windows 10

Prerequisites:

Text editor: My choice of text editor is the Visual Code. I only recently started working on it and it is just amazing (subjective opinion).

￼

￼

Visual Code

2. Git: It is really easy to setup git on windows. Just download it using this link and go through the default installation process.

￼

￼

Git installation on Windows 10

3. Node.js and npm: Download it from hereand go through default installation process.

4. A GitHub account.

Now the real fun begins:

I used the following npm command on git bash to install ‘create-react-app’. This package helps to creates a boilerplate React application to work on.

$ npm install -g create-react-app

2. In the next step I created a new React app called “website” using the command below.

$ create-react-app website

3. Then I changed to the newly created directory and run the following command to start the application. The start command creates a local development server to run the application.

#change directory
$ cd website#run application in development environment
$ npm start

4. After checking that the application runs perfectly without any error, I created a new repository on GitHub.

￼

￼

5. The next step was to convert the local react project to a git repository.

#create a new git repository
$ git init#add all changed file paths to staged changes
$ git add .#commit all staged changes
$ git commit -m 'initial commit'

6. After that I added the just created GitHub repository as the remote repository and pushed the code to it using the following commands. It created a default master branch and added all the code to it.

#add remote repository
$ git remote add origin https://github.com/gurjotmakkar/website.git#pushed local repository to remote repository on GitHub
$ git push origin master

7. The next step was to install ‘gh-pages’package using the following npm command:

#install gh-pages package
$ npm install --save gh-pages

8. Now I just needed to modified the package.json file of the project by adding the following statements (the statements are highlighted):

The “homepage” specifies the host path where you want to host the application. 
The template for the URL is: 
https://[your-user-name].github.io/[your-repo-name]/“predeploy” specifies the command to build before deployment.“deploy” specifies which branch and directory to deploy.

￼

￼

package.json

9. The last step now was to deploy the application using the following command:

#deploy application
$ npm run deploy

￼

￼

successful deployment

￼

￼

https://gurjotmakkar.github.io/website/

Success!!!!!!!!!

Conclusion:

So after the deployment, a second “gh-pages” branch is created which contains the static code for the React app for the website. Finally, the React-GitHub-Pagesenvironment setup is completed. Now I can start working on it.

