רידקס וקונטקסט נותנים לנו דרך ופתרון להעביר פרופס בצורה יותר מסודרת במיוחד בקומפוננטות מקוננות.
רידקס נותן react dev tools שאפשר לראות מה מתרחש באקשין וברדיוסר ולעקוב אחרי הסטייטים שלי והשינויים שלהם בניגוד ל contextapi.
רידקס נותן לנו שימוש במידלוואר כמו לוגינ אקשין או ארור ריפורטינג או לעשות דיספצ לבקשות אחרות שתלויות  בסרבר רספונס למשל רידקס טנק שנותן להוסיף לוגיקות ישומים למשל רידקס טנק בשביל ליצור קריאות api ולשגר את הריספונס לרדיוסר בצורה נקייה וקלה  או רידקס סגה. רידקס הוא הרבה יותר חזק ויכול לספק הרבה יותר פיצרים שהקונטקסט לא. לרידקס יש כל מני ספריות שימושיות שלקונטקסט אין כמו
למשל  redux-persist שמאפשר לשמור דטה בלוקלסטורג או לרענן.
נשתמש ברידקס מתי שהמערכת גדולה יותר ויש כמה מפתחים שעובדים על הפרויקט

ברידקס יש מידלוור טנק שבעזרתו נוכל להחזיר פונקציה ולא רק אקשין. מה שאומר שבעזרת הפונקציה אני יכול לעבוד עם פרמיס פעולה שהיא אסנכרונית כמו axios קריאה ל api ואז לעשות אקשין.

,יש סטייט מנגמנט אחר שנקרא מובקס
שהוא יוצר קלאס סטור ושמה יש את הפונקציות ואת המשתנים. בשביל להשתמש במשתנים או בפונקציות של הסטור נצטרך בקומפוננטה  להאזין לו  עלצידי observer או useObserver אחרי שעשינו אימפורט לסטור. ופשוט לשנות את המשתנה אומלהפעיל את הפונקציה store.something..
ניתן גם לשנות את המשתנה. וכל זה יתרנדר בלי שנעשה setState..

ההבדל בין מובקס לרידקס זה שרידקס הוא בסטור אחד והסטיט שלו אימיוטיבול שזה אומר שהיא אפשר לדרוס את הסטייט אלא לייצר סטייט חדש. רידקס הוא גם pure function זאת אומרת הוא מקבל אקשין ומקבל סטייט ואז בסוף מחזיר לי סטייט חדש. כל השינויים קורים רק מהרדיוסר שמי שמפעיל אותו זה ההאקשין עם פקודה מה לעשות. לרידקס אין סייד אפקט מכיוון שרק מהרדיוסר נוכל לייצר סטייט חדש ומקום אחר לא יכול לשנות אותו והוא מחזיר סטייט חדש. שזה נותן לי לעקוב אחריו בקלות ולדבג אותו לראות את התהליך כמו שצריך.
לעמת זאת למובקס יכול להיות כמה סטור ובמובקס אפשר לשנות את המשתנה מכל מקום אז זה לא pure ויהיה קשה לדבג כי בדרך יכולות להיות מלא שינויים.
מובקס קל יותר ויש בו פחות קוד ככה שלמימושים מהירים עדיף מובקס לעמת זאת רידקס לדברים יותר מורכבים כי שם נוכל לדבג ויהיה קל לעקוב. לרידקס יש קהילה גדולה יותר ויש לו כלים שאפשר להשתמש בהם.
