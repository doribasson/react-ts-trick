ריאקט ביצועים לטעינת fetch והצגתם.
יש את infinity-scroll 
שאפשר לבנות ידני על ידי קוסטום הוקס ולעשות useFetch ששם נעשה את הקריאות לשרת עם לודינג וארור ואז נחזיר את את המשתנים  המעודכנים של הקונפוננטה שזה הלודינג הארור הליסט שזה המערך מה api.
ואז לוגיקה.
https://medium.com/suyeonme/react-how-to-implement-an-infinite-scroll-749003e9896a

https://www.pluralsight.com/guides/how-to-implement-infinite-scrolling-with-reactjs

אופציה שניה זה שיש ספריות שאיתם נוכל לעבוד כמו.
react-infinite-scroller
react-infinite-scroll-component
react-infinite-scroll
react-loading-infinite-scroller
react-infinite-scroll-hook



ככה זה נותן לנו שיפור במערכת שלא הכל יטען לדום כי זה לוקח זמן וביצועים העבודה בדום ולכן נרצה כל פעם שנרד ונעשה סקרול אז יטען חלק מהדטה ואז דוב עוד חלק ולא הכל במכה.


יש גם pagination שזה בעצם לעבור מעמוד לעמוד. אופציה אחת להביא את כל הדטה של המערך ואז לחתוך אותו על פי העמודים וכמה בכל עמוד.
אופציה שניה זה לשלוח לסרבר בקשה עם מספר עמוד וכמה אני רוצה שיהיו והוא יחזיר לי בדיוק את הדטה הספציפי הזה. ככה לא נםדע בפריפורמנס כי מוריד חק בכל לחיצה על עמוד ככה הדף יטען מהר גם.


קוסטום הוקס -  אני יכול ליצור קומפוננטה או פונקציה מחוץ לקומפוננטה הראשית ואז להחזיר את הסטייטים או הפונקציות בעזרת ריטורן. בכך אני מפריד את הלוגיקה מהקומפוננטה הראשית ויכול להשתמש בזה בכל קומפוננטה שאני רוצה.
