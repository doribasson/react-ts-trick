req.parmas
זה אומר ששלחתי  מהקליינט או פוסטמן אנדפוינט עם פרמטר
Http:://localh./favorite/:doriId
בסרבר יש לי אנדפוינט של פיבוריט עם פרמטר שיודע היכן להפעיל בעקבות הפניה של הקליינט עם get, post,delete,put
והאנדפוינט.
favorite/:nameId
בעצם מאחורי הקלעים ה nameId
זה doriId.
אפשר לקבל כמה פרמטרים בעזרת הנקודתיים והשליחה של האנדפוינט מהקליינט עם כמה פרמטרים גם.
favorite/:nameId/:moreId...

req.parmas.nameId
יהיה doriId.


req.query 
בעצם אחרי ? סימן שאתה באנדפוינט למשל רוצה להגיד 
Http:://localh./favorite?page=5
ואז בסרבר או יודע שאני נותן לו
קווארי שהוא page וערכו 5.
בסרבר באנדפוינט הזה של פיבוריט נקבל אותו
req.query.page
נקבל 5.
ואז נוכל לשחק איתו.

res.body
דטה ששולחים מהקללינט לסרבר
עובד עם אנדפוינט של פוסט.
בheader נצטרך להגיד לו שהקונטנט טייפ הוא אפליקיישן/גייסון.

עכשיו בפקודות אנדפוניט שיוצאות מהקליינט לסרבר כמו גט פוסט דליט וכו.. אם אנחנו עשינו אוטנטיקיישן אוטוריזיישן עם הגנה דל מידלוואר דחייב להזדהות על ידי טוקן. אז נצטרך לתת לו ב header את הטוקן על מנת שתהיה גישה. טוקן בעצם מגן מכניסות דל משתמשים לא מורשים.
אם נכניס טוקן תקין בקליינט אז כשיגיע לסרבר לאנדפוינט הוא יראה שהטוקן תקין וימשיך לפעול אם לא הוא לא ימשיך ויזרוק שגיאה.

בשליחה מהקליינט אנדפוינט  שצריכים טוקן בשבילו נצטרך להכניס  את שם האנדפוינט וגם  דטה  וגם את ה header שבתוכו יש  את key של הפרמטר שזה למשל auto-token והתוכן שזה הטוקן.

Auto-token : "ghdrjhfshjncsehj"

אם זה אנדפוינט get אז אותו דבר רק בלי ה body שזה הדטה

res.json מחזיר לקליינט תשובה 



Jwt
אוטנטיקציה ואוטריזציה 
רישום,הזדהות עם לוגין, הזדהות אוטומטי.
רוצים בעצם ליצור יוזרים שכל יוזר הוא יחודי. נצטרך להירשם שם משתמש וסיסמא ומייל. המייל יחודי. אחרי שנבצע רישום אנחנו נרצה לפנות לסרבר שיביא לנו את הנתונים של היוזר. נצטרך לשלוח לו את הבקשה עם טוקן. 
טוקן זה סטרינג מוצפן שאפשר אחרי זה לפענח אותו ואז הוא יתן את ה id של היוזר.שזה יוזר. לכל יוזר יש טוקן משלו.
ההדר עובד בבקשות גט פוסט  פוט דליט וכו..  שאפשר להכניס לו ערכים כמו טוקן ולהעביר אותו לסרבר. בפוסט אפשר גם לשלוח בבקשה מידע כמו אוביקט לסרבר(זה לא בהדר). 
אחרי ששלחנו את הרישום יוזר לסרבר הוא יבדוק אם קיים יוזר כזה אם כן לא ימשך.. במידה הוא יצפין את id של היוזר עם hash 
ויצור טוקן. 
בסרבר יהיה מידלוואר שיבדוק  לפני כל כניסה לאנדפוינט מוגן עם קיים טוקן והוא תקין. במידה וקיים יבדוק את הפענוח שלו שהוא תקין  אם הטוקן לא תקין הוא לא ימשיך ואם כן ימשיך ויקבל את היוזר.


על מנת שישר שנכס לאפליקציה אוטומטי יזדהה עם יש טוקן נצטרך בתחילת האפליקציה לשלוח לפונקציה שבודקת אם קיים טוקן ואז אם כן לשלוח לאנדפוינט בסרבר שבודק את הטוקן שהוא תקין ואם כן נקבל את היוזר ונשנה את הסטייט לאונטיקיטד. את הבקשה של הטוקן נוכל להעביר מהקלינט לסרבר על ידי 2 דרכים או בהדר בתוך האנדפוינט של הבקשה או דרך axios  coomon header ואז בכל שליחה של אנדפוינט לסרבר עם axios הוא יקבל במתנה את הטוקן ששמרנו שם. 




מונגו- כל סכמה מיצגת מה יהיה בדוקיומנט. כל יצירה מוסיפה דוקיומנט.
למשל יש לי סכמה של יוזר וסכמה של מועדף לסרטים. 

כל יוזר יש לו id משלו.
כל מועדף יש לו id משלו.

אני יוצר דוקיומנט של יוזר זאת אומרת בפוסט מן או בקליינט נותן  לו ב body שם סיסמא אמייל ו id.
(מה שבסכמה מודל של היוזר

יוצר דוקיומנט של מועדף  נותן לו שם ו id ב body ובנוסף נותן לו id של היוזר וככה נידע כל מועדף לאיזה יוזר הוא שייך (התכונות ששמנו בסכמה מודל של מועדפים)




